Temperature Logger

This code is based on the datalogger project hosted [[https://github.com/cnvogelg/ardu][here]].

* Hardware
  - Components
    - Arduino Uno
    - [[http://www.ladyada.net/make/logshield/][Adafruit Data Logger Shield]]
    - 1 Push Button
    - 3 DS18B20 Temperature Sensor
  - Wiring
    - DIGITAL 2 Input Push Button (toggle log recording on SD card)
    - DIGITAL 3 green LED (on => logger is ok)
    - DIGITAL 4 red LED   (on => logger is writing to SD card)
    - DIGITAL 7,8,9 data pins for DS 18B20's

See the arduino button [[http://www.arduino.cc/en/Tutorial/button][tutorial]] on how to connect the button.  The two
LEDs are already available on the shield, you only have to connect
them to the DIGITAL ports of the Arduino. The temperature sensors
needs +5V and GND additionally. Take these lines directly from the
shield. See the [[http://datasheets.maximintegrated.com/en/ds/DS18S20.pdf][datasheet]] for the pin out of the sensor.

* Additional Libraries
  - [[http://www.ladyada.net/make/logshield/rtc.html][RTClib]]
  - [[http://www.arduino.cc/playground/Learning/OneWire][OneWire]]
  - [[http://milesburton.com/Dallas_Temperature_Control_Library][DallasTemperature]]

* Stand Alone Operation
  - Startup
    - Insert an SD Card and make sure the clock battery is inserted.
    - Reset or power on Arduino.
  - Reading the LED's
    - When the unit is operating normally the green led should be on
      (almost) constantly. It only blinks off for a moment when the
      program takes and records a temperature reading.
    - The red led is on solidly---not blinking---when the software is
      logging readings to a file on the SD card. This happens
      automatically on startup.
    - If the red led blinks then something went wrong.
      + Check the SD Card.
      + Check the temperature sensors.
      + Check the real time clock.
      + Reset and try again.
      + Connect to a computer and look for a possible error message on
        the serial console.
  - Pressing the button will toggle logging to the SD card. Each time
    you enable logging the red led will come on and the program will
    create a new file on the card.

* Operating While Connected to a Host Computer
With the unit connected to a usb port open the serial console in the
Arduino IDE to see the output of the logger.
  - Reading from the Serial Connection
    - At regular intervals the program prints out a timestamp and the
      temperatures.
    - It also prints out messages describing any errors it encounters.
  - Writing to the Serial Connection

    You can type in a line of text and hit RETURN to enter commands.
    - Set the date by entering a line with the format yyyy-mm-dd for
      year month day of month. For example:

      2013-03-10

      for March 10, 2013.

    - Set the time by entering a line with the format hh:mm:ss for
      hours minutes seconds. (You could just enter hh:mm to let the
      seconds default to 0.) For example:
	
      09:30:25

    - By default the software will take a temperature reading every 15
      minutes. You can change this by entering a "d" followed by a
      number. This will make the time interval between temperature
      samples that number of seconds. For example to sample every two
      minutes enter:

      d 120

    - Enter "o" to open a log file on the SD card, and enter "c" to
      close it.
	
    - Enter "r" to read the date and time of the clock.

* Reading the Log Files
The program automatically generates names for the log files of the
form yymmdd_a.log where yy is the last two digits of the year, mm and
dd are the month and day of month numbers and a is "a" for the first
file created that day, and "b" for the second and so on. Each entry in
the log file has 5 components:

  - the date as yyyy-mm-dd,
  - the time as hh:mm:ss,
  - the time as number of seconds since the epoch (1970-1-1),
  - the pin number of the thermistor, and
  - the temperature in fahrenheit.

For example, a line will look something like this:

  2013-12-21 13:15:27 1387631727 7  36.05
